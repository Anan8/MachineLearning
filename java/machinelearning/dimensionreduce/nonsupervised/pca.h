/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class machinelearning_dimensionreduce_nonsupervised_PCA */

#ifndef _Included_machinelearning_dimensionreduce_nonsupervised_PCA
#define _Included_machinelearning_dimensionreduce_nonsupervised_PCA
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble */

#ifndef _Included_machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
#define _Included_machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
 * Method:    getDimension
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateDouble_getDimension
  (JNIEnv *, jobject);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
 * Method:    map
 * Signature: ([[Ljava/lang/Double;)[[Ljava/lang/Double;
 */
JNIEXPORT jobjectArray JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateDouble_map
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
 * Method:    getProject
 * Signature: ()[[Ljava/lang/Double;
 */
JNIEXPORT jobjectArray JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateDouble_getProject
  (JNIEnv *, jobject);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateDouble_dispose
  (JNIEnv *, jobject);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateDouble
 * Method:    cppCtor
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateDouble_cppCtor
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat */

#ifndef _Included_machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
#define _Included_machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
 * Method:    getDimension
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateFloat_getDimension
  (JNIEnv *, jobject);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
 * Method:    map
 * Signature: ([[Ljava/lang/Float;)[[Ljava/lang/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateFloat_map
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
 * Method:    getProject
 * Signature: ()[[Ljava/lang/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateFloat_getProject
  (JNIEnv *, jobject);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateFloat_dispose
  (JNIEnv *, jobject);

/*
 * Class:     machinelearning_dimensionreduce_nonsupervised_PCA_DelegateFloat
 * Method:    cppCtor
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_machinelearning_dimensionreduce_nonsupervised_PCA_00024DelegateFloat_cppCtor
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class machinelearning_dimensionreduce_nonsupervised_PCA_Strategy */

#ifndef _Included_machinelearning_dimensionreduce_nonsupervised_PCA_Strategy
#define _Included_machinelearning_dimensionreduce_nonsupervised_PCA_Strategy
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
